stages:
  - build
  - sonarqube-check

build:
  stage: build
  image: python:3.9
  script:  # Update package list (if needed)
    - echo $MY_SUDO_PASSWORD | sudo -S apt-get install -y python3-venv # Install python3-venv package
    - python3 -m venv env 
   # - echo $MY_SUDO_PASSWORD | sudo -S apt-get install sshpass
    #- sshpass -p $SSHPASS ssh -o StrictHostKeyChecking=no $SSH_USER 'sudo cp -R /home/gitlab-runner/builds/z9R52iE65/0/ag-team/psyhire/ /root/psy_backend_testing/'
   # - sshpass -p $SSHPASS ssh -o StrictHostKeyChecking=no $SSH_USER 'cd /root/psy_backend_testing/ &&source env/bin/activate&&python manage.py makemigrations && python manage.py migrate'
   # - sshpass -p $SSHPASS ssh -o StrictHostKeyChecking=no $SSH_USER 'systemctl restart psy_development_testing.service'
     # Activate the virtual environment
    #- echo $MY_SUDO_PASSWORD | sudo -S cd /root/psy_backend_testing/ && python manage.py migrate
    #- echo $MY_SUDO_PASSWORD | sudo -S ssh gitlab-runner@164.52.214.15 'systemctl restart psy_development_testing.service' # Run tests
sonarqube-check:
  stage : sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner -X -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD -Dsonar.projectKey=psy_hire_backend
  only:
    - DEV/Backend # or the name of your main branch